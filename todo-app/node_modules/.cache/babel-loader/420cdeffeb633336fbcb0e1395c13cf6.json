{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\project\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; //bootstrap css file\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToDoList } from './components/ToDoList';\nimport { useState, useRef, useEffect } from 'react';\nimport Form from 'react-bootstrap/esm/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //useStates\n  var [todoList, setToDo] = useState([]);\n  var [count, setCount] = useState(1); //useRef\n\n  var nameToDo = useRef(); //css\n\n  var main = {\n    margin: 'auto',\n    width: 400\n  };\n  var boxAlert = {\n    backgroundColor: \"#ffcccc\",\n    border: \"1px solid red\",\n    color: \"red\",\n    marginTop: \"20px\"\n  };\n  var boxSuccess = {\n    backgroundColor: \"#d7ffc7\",\n    border: \"1px solid green\",\n    color: \"green\",\n    marginTop: \"20px\"\n  };\n\n  const handleAddToDo = e => {\n    let flag = 0;\n    let name = nameToDo.current.value;\n\n    if (name == '') {\n      alert(\"Empty ToDo input\");\n      return;\n    }\n\n    todoList.map(ele => {\n      if (ele.name.toUpperCase() == name.toUpperCase()) {\n        alert(\"Can not enter same name\");\n        flag = 1;\n      }\n    });\n\n    if (flag != 1) {\n      setCount(count + 1);\n      setToDo(previousToDo => {\n        return [...previousToDo, {\n          id: count,\n          name: name,\n          completed: false\n        }];\n      });\n    }\n\n    nameToDo.current.value = \"\";\n  };\n\n  const toggleToDo = id => {\n    const newToDos = [...todoList];\n    const todo = newToDos.find(todo => todo.id === id);\n    todo.status = !todo.status;\n    setToDo(newToDos);\n  };\n\n  const handleClearToDo = e => {\n    const completed = todoList.filter(todo => !todo.status);\n    setToDo(completed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: todoList.filter(todo => !todo.status).length ? boxAlert : boxSuccess,\n        children: [todoList.filter(todo => !todo.status).length, \" LEFT TO COMPLETE !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter ToDo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ref: nameToDo,\n            placeholder: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          onClick: handleAddToDo,\n          className: \"m-3\",\n          children: \"Add ToDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          onClick: handleClearToDo,\n          children: \"Show Only Incomplete ToDos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      todoList: todoList,\n      toggleToDo: toggleToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oax/F2F6lK8v4rTDNuXu4OcMqcI=\");\n\n_c = App;\nexport default App; // \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/project/todo-app/src/App.js"],"names":["ToDoList","useState","useRef","useEffect","Form","Button","Container","App","todoList","setToDo","count","setCount","nameToDo","main","margin","width","boxAlert","backgroundColor","border","color","marginTop","boxSuccess","handleAddToDo","e","flag","name","current","value","alert","map","ele","toUpperCase","previousToDo","id","completed","toggleToDo","newToDos","todo","find","status","handleClearToDo","filter","length"],"mappings":";;;AAAA,OAAO,WAAP,C,CACA;;AACA,OAAO,sCAAP;AAEA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,MAAI,CAACC,QAAD,EAAWC,OAAX,IAAsBR,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAhC,CAJa,CAKb;;AACA,MAAIW,QAAQ,GAAGV,MAAM,EAArB,CANa,CAOb;;AACA,MAAIW,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,KAAK,EAAE;AAFE,GAAX;AAIA,MAAIC,QAAQ,GAAG;AACbC,IAAAA,eAAe,EAAE,SADJ;AAEbC,IAAAA,MAAM,EAAE,eAFK;AAGbC,IAAAA,KAAK,EAAE,KAHM;AAIbC,IAAAA,SAAS,EAAE;AAJE,GAAf;AAMA,MAAIC,UAAU,GAAG;AACfJ,IAAAA,eAAe,EAAE,SADF;AAEfC,IAAAA,MAAM,EAAE,iBAFO;AAGfC,IAAAA,KAAK,EAAE,OAHQ;AAIfC,IAAAA,SAAS,EAAE;AAJI,GAAjB;;AAMA,QAAME,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,IAAI,GAAGb,QAAQ,CAACc,OAAT,CAAiBC,KAA5B;;AACA,QAAIF,IAAI,IAAI,EAAZ,EAAgB;AACdG,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;;AACDpB,IAAAA,QAAQ,CAACqB,GAAT,CAAaC,GAAG,IAAI;AAClB,UAAIA,GAAG,CAACL,IAAJ,CAASM,WAAT,MAA0BN,IAAI,CAACM,WAAL,EAA9B,EAAkD;AAChDH,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACAJ,QAAAA,IAAI,GAAG,CAAP;AACD;AACF,KALD;;AAMA,QAAIA,IAAI,IAAI,CAAZ,EAAe;AACbb,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAD,MAAAA,OAAO,CAAEuB,YAAD,IAAkB;AACxB,eAAO,CAAC,GAAGA,YAAJ,EAAkB;AAAEC,UAAAA,EAAE,EAAEvB,KAAN;AAAae,UAAAA,IAAI,EAAEA,IAAnB;AAAyBS,UAAAA,SAAS,EAAE;AAApC,SAAlB,CAAP;AACD,OAFM,CAAP;AAGD;;AACDtB,IAAAA,QAAQ,CAACc,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACD,GApBD;;AAsBA,QAAMQ,UAAU,GAAIF,EAAD,IAAQ;AACzB,UAAMG,QAAQ,GAAG,CAAC,GAAG5B,QAAJ,CAAjB;AACA,UAAM6B,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAlC,CAAb;AACAI,IAAAA,IAAI,CAACE,MAAL,GAAc,CAACF,IAAI,CAACE,MAApB;AACA9B,IAAAA,OAAO,CAAC2B,QAAD,CAAP;AACD,GALD;;AAOA,QAAMI,eAAe,GAAIjB,CAAD,IAAO;AAC7B,UAAMW,SAAS,GAAG1B,QAAQ,CAACiC,MAAT,CAAgBJ,IAAI,IAAI,CAACA,IAAI,CAACE,MAA9B,CAAlB;AACA9B,IAAAA,OAAO,CAACyB,SAAD,CAAP;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAErB,IAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEL,QAAQ,CAACiC,MAAT,CAAgBJ,IAAI,IAAI,CAACA,IAAI,CAACE,MAA9B,EAAsCG,MAAtC,GAA+C1B,QAA/C,GAA0DK,UAAtE;AAAA,mBAAmFb,QAAQ,CAACiC,MAAT,CAAgBJ,IAAI,IAAI,CAACA,IAAI,CAACE,MAA9B,EAAsCG,MAAzH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,GAAG,EAAE9B,QAA/B;AAAyC,YAAA,WAAW,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAEU,aAAjD;AAAgE,UAAA,SAAS,EAAC,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAEkB,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEhC,QAApB;AAA8B,MAAA,UAAU,EAAE2B;AAA1C;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhFQ5B,G;;KAAAA,G;AAkFT,eAAeA,GAAf,C,CACA","sourcesContent":["import './App.css';\r\n//bootstrap css file\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { ToDoList } from './components/ToDoList';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/esm/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n\r\n  //useStates\r\n  var [todoList, setToDo] = useState([])\r\n  var [count, setCount] = useState(1);\r\n  //useRef\r\n  var nameToDo = useRef()\r\n  //css\r\n  var main = {\r\n    margin: 'auto',\r\n    width: 400,\r\n  }\r\n  var boxAlert = {\r\n    backgroundColor: \"#ffcccc\",\r\n    border: \"1px solid red\",\r\n    color: \"red\",\r\n    marginTop: \"20px\",\r\n  }\r\n  var boxSuccess = {\r\n    backgroundColor: \"#d7ffc7\",\r\n    border: \"1px solid green\",\r\n    color: \"green\",\r\n    marginTop: \"20px\",\r\n  }\r\n  const handleAddToDo = (e) => {\r\n    let flag = 0;\r\n    let name = nameToDo.current.value;\r\n    if (name == '') {\r\n      alert(\"Empty ToDo input\");\r\n      return\r\n    }\r\n    todoList.map(ele => {\r\n      if (ele.name.toUpperCase() == name.toUpperCase()) {\r\n        alert(\"Can not enter same name\");\r\n        flag = 1;\r\n      }\r\n    })\r\n    if (flag != 1) {\r\n      setCount(count + 1);\r\n      setToDo((previousToDo) => {\r\n        return [...previousToDo, { id: count, name: name, completed: false }]\r\n      })\r\n    }\r\n    nameToDo.current.value = \"\";\r\n  }\r\n\r\n  const toggleToDo = (id) => {\r\n    const newToDos = [...todoList]\r\n    const todo = newToDos.find(todo => todo.id === id)\r\n    todo.status = !todo.status;\r\n    setToDo(newToDos);\r\n  }\r\n\r\n  const handleClearToDo = (e) => {\r\n    const completed = todoList.filter(todo => !todo.status)\r\n    setToDo(completed)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={main} >\r\n        <div style={todoList.filter(todo => !todo.status).length ? boxAlert : boxSuccess}>{todoList.filter(todo => !todo.status).length} LEFT TO COMPLETE !</div>\r\n        <Form>\r\n          <Form.Group className=\"mt-5\">\r\n            <Form.Label>Enter ToDo</Form.Label>\r\n            <Form.Control type=\"text\" ref={nameToDo} placeholder=\"To Do\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"button\" onClick={handleAddToDo} className='m-3'>\r\n            Add ToDo\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"button\" onClick={handleClearToDo}>\r\n            Show Only Incomplete ToDos\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n\r\n      <ToDoList todoList={todoList} toggleToDo={toggleToDo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// "]},"metadata":{},"sourceType":"module"}